#BlueJ class context
comment0.target=Room
comment0.text=\r\n\ Class\ Room\ -\ a\ room\ in\ an\ adventure\ game.\r\n\r\n\ This\ class\ is\ part\ of\ the\ Lockdown\ application.\ \r\n\ Lockdown\ is\ a\ very\ simple,\ text\ based\ adventure\ game.\ \r\n\r\n\ A\ "Room"\ represents\ one\ location\ in\ the\ scenery\ of\ the\ game\ and\ \r\n\ is\ represented\ by\ a\ description.\ \ \r\n\ It\ is\ connected\ to\ other\ rooms\ via\ exits.\ \ For\ each\ existing\ exit,\ the\ room\ \r\n\ stores\ a\ reference\ to\ the\ neighboring\ room.\r\n\ It\ can\ store\ multiple\ items\ as\ well\ as\ people.\r\n\ A\ Room\ can\ be\ a\ control\ one,\ such\ that\ the\ player\ should\ do\ additional\r\n\ stuff\ here\ so\ he\ can\ advance\ in\ the\ game.\r\n\ \r\n\ @author\ \ Michael\ K\u00F6lling,\ David\ J.\ Barnes,\ Dariana\ Dorin\r\n\ @version\ november\ 2020\r\n
comment1.params=description
comment1.target=Room(java.lang.String)
comment1.text=\r\n\ Create\ a\ room\ described\ "description".\ Initially,\ it\ has\r\n\ no\ exits,\ no\ items\ and\ no\ people\ inside,\ and\ it\ \r\n\ is\ a\ normal\ room(not\ a\ control\ one).\ \r\n\ "description"\ is\ something\ like\ "a\ kitchen"\ or\r\n\ "an\ open\ court\ yard".\r\n\ @param\ description\ The\ room's\ description.\r\n
comment10.params=name
comment10.target=void\ removePerson(java.lang.String)
comment10.text=\r\n\ Remove\ a\ person\ from\ the\ room\ by\ her\ name\r\n\ @param\ name\ The\ name\ of\ the\ person\ to\ be\ removed\r\n
comment11.params=
comment11.target=java.lang.String\ getShortDescription()
comment11.text=\r\n\ Get\ the\ description\ of\ the\ room\r\n\ @return\ The\ short\ description\ of\ the\ room\r\n\ (the\ one\ that\ was\ defined\ in\ the\ constructor).\r\n
comment12.params=
comment12.target=java.lang.String\ getLongDescription()
comment12.text=\r\n\ Return\ the\ description\ with\ all\ the\ information\ about\ the\ room\r\n\ @return\ A\ long\ description\ of\ this\ room\r\n
comment13.params=
comment13.target=java.lang.String\ getExitString()
comment13.text=\r\n\ Return\ a\ string\ describing\ the\ room's\ exits,\ for\ example\r\n\ "Exits\:\ north\ west".\r\n\ @return\ Details\ of\ the\ room's\ exits.\r\n
comment14.params=
comment14.target=java.lang.String\ getItemsString()
comment14.text=\r\n\ Return\ a\ string\ describing\ the\ room's\ items,\ for\ example\r\n\ "Items\:\ fridge\ pen".\r\n\ @return\ Details\ of\ the\ room's\ items.\r\n
comment15.params=
comment15.target=java.lang.String\ getPeopleString()
comment15.text=\r\n\ Return\ a\ string\ describing\ the\ people\ inside\ the\ room\ and\ what\ they\ need\r\n\ @return\ Details\ of\ the\ people\ in\ the\ room.\r\n
comment16.params=direction
comment16.target=Room\ getExit(java.lang.String)
comment16.text=\r\n\ Return\ the\ room\ that\ is\ reached\ if\ we\ go\ from\ this\ room\ in\ direction\r\n\ "direction".\ If\ there\ is\ no\ room\ in\ that\ direction,\ return\ null.\r\n\ @param\ direction\ The\ exit's\ direction.\r\n\ @return\ The\ room\ in\ the\ given\ direction.\r\n
comment17.params=
comment17.target=boolean\ getIfControlRoom()
comment17.text=\r\n\ Get\ if\ the\ room\ is\ a\ control\ one\ or\ not\r\n\ @return\ true\ if\ it\ is,\ false\ if\ not\r\n
comment18.params=name
comment18.target=Person\ getPerson(java.lang.String)
comment18.text=\r\n\ Get\ if\ the\ room\ has\ a\ specific\ person\ by\ his\ name\r\n\ @param\ name\ The\ name\ of\ the\ person\ we\ are\ looking\ for\r\n\ @return\ the\ person\ or\ null\ if\ there\ is\ no\ one\ with\ that\ name\r\n
comment19.params=
comment19.target=boolean\ hasPeople()
comment19.text=\r\n\ Get\ if\ the\ room\ has\ any\ people\ inside\r\n\ @return\ false\ if\ there\ is\ no\ one\ ar\ tru\ if\ there\ are\ some\ people\r\n
comment2.params=direction\ neighbor
comment2.target=void\ setExit(java.lang.String,\ Room)
comment2.text=\r\n\ Define\ an\ exit\ from\ this\ room.\r\n\ @param\ direction\ The\ direction\ of\ the\ exit.\r\n\ @param\ neighbor\ \ The\ room\ to\ which\ the\ exit\ leads.\r\n
comment20.params=itemName
comment20.target=Item\ getItem(java.lang.String)
comment20.text=\r\n\ Get\ the\ item\ with\ a\ specific\ name\ from\ this\ room,\ return\ null\ if\ there\ is\ no\ item\ called\ like\ that\ here\r\n\ @param\ itemName\ The\ name\ of\ the\ item\ we\ are\ looking\ for\r\n\ @retuns\ the\ item\ \r\n
comment21.params=itemName
comment21.target=Item\ openedItemThatContains(java.lang.String)
comment21.text=\r\n\ Get\ an\ opened\ item\ from\ the\ room\ that\ contains\ another\ specific\ item,\ or\ null\ if\ there\ is\ none\r\n\ @param\ itemName\ The\ name\ of\ the\ item\ we\ are\ looking\ for\ insede\ any\ opened\ item\ in\ the\ room\r\n\ @return\ the\ opened\ item\ that\ contains\ that\ specific\ item\r\n
comment3.params=
comment3.target=void\ setControlRoom()
comment3.text=\r\n\ Makes\ the\ room\ a\ control\ one\r\n
comment4.params=name\ weight
comment4.target=void\ putItem(java.lang.String,\ int)
comment4.text=\r\n\ \ Put\ an\ item\ in\ this\ room\r\n\ \ @param\ name\ The\ name\ of\ the\ item\r\n\ \ @param\ isCarriable\ True\ if\ the\ item\ can\ be\ picked\ up,\ false\ if\ not\r\n
comment5.params=item
comment5.target=void\ putItem(Item)
comment5.text=\r\n\ \ Put\ an\ item\ in\ this\ room\r\n\ \ @param\ item\ The\ item\ to\ be\ added\ to\ this\ room\r\n
comment6.params=name
comment6.target=void\ removeItem(java.lang.String)
comment6.text=\r\n\ \ Remove\ an\ item\ from\ this\ room\r\n\ \ @param\ name\ The\ name\ of\ the\ item\ to\ be\ removed\ from\ this\ room\r\n
comment7.params=
comment7.target=void\ closeAllItems()
comment7.text=\r\n\ For\ all\ the\ items\ in\ the\ room,\ make\ them\ closed\r\n
comment8.params=name\ needs
comment8.target=void\ addPerson(java.lang.String,\ java.lang.String)
comment8.text=\r\n\ Add\ a\ person\ in\ the\ room,\ with\ a\ name\ and\ a\ need\r\n\ @param\ name\ The\ name\ of\ the\ person\r\n\ @param\ needs\ What\ the\ person\ needs\r\n
comment9.params=person
comment9.target=void\ addPerson(Person)
numComments=22
